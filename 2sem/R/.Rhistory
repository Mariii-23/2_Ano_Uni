c<-character(8)
c
c+NULL
c<-c("a","b","c")
class(c)
c+NULL
x<-c(1:99)
x
1: length(x) - 1
seq (along  =  x) - 1
1: length(x) - 1
x
x<-c(1:99)
a<-(1: length(x) - 1)
b<-(seq (along  =  x) - 1)
a==b
where(a!=0)
which(a!=0)
a
b
which(a!=b)
?along()
x<-c(99:1)
a
b<-(seq (along  =  x) - 1)
a<-(1: length(x) - 1)
which(a!=b)
b
x
a<-(1: length(x) - 1)
x<-c(1:25,90:-5,3:9)
x
a<-(1: length(x) - 1)
a
b<-(seq (along  =  x) - 1)
b
which(a!=b)
x<-c(nill)
x<-c(NA)
b<-(seq (along  =  x) - 1)
a<-(1: length(x) - 1)
which(a!=b)
b
a
x<-numeric(0)
which(a!=b)
a<-(1: length(x) - 1)
b<-(seq (along  =  x) - 1)
which(a!=b)
a
b
ex1<-data.frame()
ex1<-data.frame()
ex1<-data.frame()
iris
tapply(iris$Petal.Length,iris$Species,mean)
?subset
?apply
?colMeans
install.packages("carData")
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
movies <- read.csv("MovieRatings.csv")
setwd('/home/mari/2_Ano_Uni/2sem/R/'
)
movies <- read.csv("MovieRatings.csv")
View(movies)
str(movies)
class(movies$Genre)
typeof(movies$Genre)
movies$Genre <- factor(movies$Genre)
class(movies$Genre)
typeof(movies$Genre)
movies$Genre
str(movies)
summary(movies)
tail(movies)
movies[which(movies$BudgetMillion == max(movies$BudgetMillion)), ]
movies[which(movies$BudgetMillion == min(movies$BudgetMillion)), ]
max(movies$Budget..million...)
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == max(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
##movies[which(movies$BudgetMillion == max(movies$BudgetMillion)), ]
movies[which(movies$Budget..million... == max(movies$Budget..million...)), ]
movies[which(movies$Budget..million... == min(movies$Budget..million...)), ]
ggplot(movies, aes(x = Genre, fill = Year)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = Genre, fill = Year)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Genre, fill = Year)) +
geom_bar(position = "stack")
head(movies)
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = Genre, size = BudgetMillion)) +
geom_point()
ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = Genre, size = BudgetMillion)) +
geom_point()
head(movies)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = BudgetMillion)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
movies[which(movies$AudienceRatings == min(movies$AudienceRatings) & movies$CriticRatings == min(movies$CriticRatings) ), ]
movies[which(movies$Audience.Ratings.. == max(movies$Audience.Ratings..) & movies$Genre == "Thriller" ), ]
movies[which(movies$Audience.Ratings.. == max(movies$Audience.Ratings..) & movies$Genre == "Thriller" ), ]
movies[which(movies$Audience.Ratings.. == min(movies$Audience.Ratings..) & movies$Rotten.Tomatoes.Ratings.. == min(movies$Rotten.Tomatoes.Ratings..) ), ]
ggplot(movies) +
geom_point(aes(x = Audience.Ratings.., y = Audience.Ratings.., color = Genre, size = Budget.Million..))
ggplot(movies) +
geom_point(aes(x = Audience.Ratings.., y = Audience.Ratings.., color = Genre, size = Budget..million...))
p <- ggplot(movies)
p <- ggplot(movies)
p
p + geom_point(aes(x = AudienceRatings, y = CriticRatings)) + geom_smooth()
p + geom_point(aes(x = Audience.Ratings..., y = Audience.Ratings..)) + geom_smooth()
ggplot(movies) +
geom_point(aes(x = Audience.Ratings.., y = Audience.Ratings.., color = Genre, size = Budget..million...))
p + geom_point(aes(x = Audience.Ratings.., y =  Audience.Ratings..)) + geom_smooth()
q <- ggplot(movies, aes(x = AudienceRatings, y = CriticRatings))
q + geom_point() + geom_smooth()
q <- ggplot(movies, aes(x = Audience.Ratings.., y = Budget..million...))
q + geom_point() + geom_smooth()
q + geom_point() + geom_smooth(fill=NA)
q + geom_point() + geom_smooth()
q + geom_point() + geom_smooth(fill=NA)
q + geom_point() + geom_smooth()
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = BudgetMillion)) +
geom_point()
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..Million...)) +
geom_point()
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point(aes(size=Rotten.Tomatoes.Ratings..))
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point(aes(size=Rotten.Tomatoes.Ratings..))
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point(aes(size=Rotten.Tomatoes.Ratings..))
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = CriticRatings)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Rotten.Tomatoes.Ratings..)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..)) +
# ggplot(movies, aes(x = AudienceRatings, y = CriticRatings)) +
geom_point(size = 5, color = "DarkGreen")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= "DarkGreen")) +
# ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = "DarkGreen")) +
geom_point(size = 5)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..)) +
geom_point(size = 5, color = "DarkGreen")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= "DarkGreen")) +
geom_point(size = 5)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre) +
facet_grid(Genre ~ .)
facet_grid(Genre ~ .)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre) +
facet_grid(Genre ~ .)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = Genre)) +
geom_point(size = 3) +
facet_grid(. ~ Genre)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year)
head(movies)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
head(movies)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
.
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= "DarkGreen")) +
geom_point(size = 5)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
# so bolinhas
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= "DarkGreen")) +
geom_point(size = 5)
ggplot(movies, aes(x = AudienceRatings, y = CriticRatings, color = Genre)) +
geom_point(size = 3) +
facet_grid(. ~ Genre)
#
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(. ~ Genre)
# bolinhas avaliadas por genero (separado)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
# bolinhas avaliadas por genreo (separado) (vertical)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(. ~ Genre)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.releaser, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth() +
facet_grid(Genre ~ Year, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth() +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth() +
facet_grid(Genre ~ Year.of.release, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth(fill=NA) +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
# tenta desenhar uma reta
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth() +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
# tenta desenhar uma reta
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth(fill=NA) +
facet_grid(Genre ~ Year.of.release, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.. )) +
geom_histogram(binwidth = 5) +
xlab("classes de audiencia") + ylab("numero de efetivos") +
ggtitle("histograma")
df <- data.frame (A = c(-8, 7))
df$B <- list(matrix(1:6, nc=3), matrix(1:6))
str(df)
class(df[["B"]])
class(df["B"])
library(MASS)
head(crabs)
dim(crabs)
library(ggplot2)
pl <- ggplot(crabs, aes(x = BD))
pl + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
pl1 + geom_histogram(binwidth = 0.5, color="white", alpha = 0.5, position = "dodge")
pl5 <- ggplot(crabs, aes(x = BD, y = ..density..))
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(fill = "red", alpha = 0.4)
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(color = "red")
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(fill = "red", alpha = 0.4)
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(color = "red")
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
ggplot(crabs, aes(x = BD)) +
geom_histogram(color="black", fill = "white") +
facet_grid(sex~.)
ggplot(crabs, aes(x = BD)) +
geom_histogram(binwidth = 0.5, color="white", fill = "red", alpha=0.4) +
facet_grid(sp~.)
med <- tapply(crabs$BD, crabs$sex, mean)
class(med)
dim(med)
med[1]
med[2]
names(med) <- NULL
medias <- data.frame (sexo = c("F", "M"), media.grupo = c(med[1], med[2]))
med <- tapply(crabs$BD, crabs$sp, mean)
names(med) <- NULL
mu <- data.frame(sp = c("B", "O"), med.grupo = c(med[1], med[2]))
mu
p<-ggplot(crabs, aes(x=BD, color=sp)) +
geom_histogram(fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=med.grupo, color=sp),
linetype="dashed")+
facet_grid(sp~.)
p
med <- tapply(crabs$BD, crabs$sex, mean)
med
medias <- data.frame (sexo = c("F", "M"), media.grupo = c(med[1], med[2]))
medias
med <- tapply(crabs$BD, crabs$sp, mean)
med
names(med) <- NULL
med
mu <- data.frame(sp = c("B", "O"), med.grupo = c(med[1], med[2]))
mu
ola<-read.csv("DemographicData(1).csv")
ola$Birth.rate
ola
View(ola)
tapply(ola, ola$Birth.rate, summary)
tapply(ola$Birth.rate, ola$Income.Group, summary)
?tapply(vector, index, function)
?tapply
?rapply
?tapply
tapply(1:n, fac, sum)
n <- 17; fac <- factor(rep_len(1:3, n), levels = 1:5)
tapply(1:n, fac, sum)
fac
tapply(1:n, fac, sum)
?rapply
X <- list(list(a = pi, b = list(c = 1L)), d = "a test")
X
rapply(X, function(x) x, how = "replace") -> X.; stopifnot(identical(X, X.))
rapply(X, sqrt, classes = "numeric", how = "replace")
X
rapply(X, sqrt, classes = "numeric", how = "replace")
?tapply
negativos<-function(n){
print(which(n<0))
sum(apply(n,1,function(x) sum(x<0)))
}
m
m<-matrix(1:25,nrow = 5)
m<-matrix(-20:25,nrow = 5)
m<-matrix(-20:20,nrow = 5)
m<-matrix(-20:21,nrow = 5)
m<-matrix(-20:19,nrow = 5)
m
negativos(m)
negativos<-function(n){
print(which(n<0,arr.ind=T))
sum(apply(n,1,function(x) sum(x<0)))
}
negativos(m)
X <- list(list(a = pi, b = list(c = 1L)), d = "a test")
movies <- read.csv("MovieRatings.csv")
str(movies)
movies$Year <- factor(movies$Year)
summary(movies)
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "stack")
ggplot(movies, aes(x = Genre, fill = Year.of.release)) +
geom_bar(position = "dodge")
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point(aes(size=Rotten.Tomatoes.Ratings..))
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
#### overriding aes
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Budget..million...)) +
geom_point(aes(size=Rotten.Tomatoes.Ratings..))
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre, size = Rotten.Tomatoes.Ratings..)) +
geom_point()
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..)) +
geom_point(size = 5, color = "DarkGreen")
# so bolinhas
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= "DarkGreen")) +
geom_point(size = 5)
# bolinhas avaliadas por genero (separado) (horizontal)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings..,color= Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ .)
# bolinhas avaliadas por genreo (separado) (vertical)
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(. ~ Genre)
# bolinhas avaliadas por cada geneero e por cada ano
# escala igual pra todos
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release)
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
# tenta desenhar uma reta
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth() +
facet_grid(Genre ~ Year.of.release, scales = "free")
# bolinhas avaliadas por cada geneero e por cada ano
# escala depende do q avalia
# tenta desenhar uma reta
# Mais limpa sem os NA
ggplot(movies, aes(x = Audience.Ratings.., y = Rotten.Tomatoes.Ratings.., color = Genre)) +
geom_point(size = 3) +
geom_smooth(fill=NA) +
facet_grid(Genre ~ Year.of.release, scales = "free")
ggplot(movies, aes(x = Audience.Ratings.. )) +
geom_histogram(binwidth = 5) +
xlab("classes de audiencia") + ylab("numero de efetivos") +
ggtitle("histograma")
pl <- ggplot(crabs, aes(x = BD))
pl + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
pl <- ggplot(crabs, aes(x = BD))
pl + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)
pl1 <- ggplot(crabs, aes(x = BD, fill = sex))
pl1 + geom_histogram(binwidth = 0.5, color="white")
pl1 + geom_histogram(binwidth = 0.5, color="white", alpha = 0.5, position = "dodge")
pl1 <- ggplot(crabs, aes(x = BD, fill = sex))
pl1 + geom_histogram(binwidth = 0.5, color="white")
pl1 + geom_histogram(binwidth = 0.5, color="white", alpha = 0.5, position = "dodge")
#histrogram com 2 analises entre o sexo
pl1 <- ggplot(crabs, aes(x = BD, fill = sex))
pl1 + geom_histogram(binwidth = 0.5, color="white")
#histrogram com 2 analises entre o sexo
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
pl5 <- ggplot(crabs, aes(x = BD, y = ..density..))
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(fill = "red", alpha = 0.4)
#histrogram entre 2 com reta
pl5 + geom_histogram(binwidth = 0.5, color="white", fill="green", alpha = 0.5)+
geom_density(color = "red")
pl1 <- ggplot(crabs, aes(x = BD, color = sex))
pl1 + geom_histogram(binwidth = 0.5, fill="white")
ggplot(crabs, aes(x = BD)) +
geom_histogram(color="black", fill = "white") +
facet_grid(sex~.)
med <- tapply(crabs$BD, crabs$sex, mean)
med
medias <- data.frame (sexo = c("F", "M"), media.grupo = c(med[1], med[2]))
medias
mu <- data.frame(sp = c("B", "O"), med.grupo = c(med[1], med[2]))
mu
p<-ggplot(crabs, aes(x=BD, color=sp)) +
geom_histogram(fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=med.grupo, color=sp),
linetype="dashed")+
facet_grid(sp~.)
p
tapply(vector, index, function)
tapply(crabs$FL, list(crabs$sex, crabs$sp), mean)
